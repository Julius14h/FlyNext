import { NextResponse } from "next/server";
import prisma from "@/utils/prisma";
import { authenticate } from "@/utils/auth";
// generated by cursor
export async function GET(request: Request) {
  try {
    // Authenticate the request
    const token = await authenticate(request);
    
    if (!token) {
      return NextResponse.json(
        { error: "Unauthorized" },
        { status: 401 }
      );
    }

    // Get the user from the database to ensure we have the latest data
    const userData = await prisma.user.findUnique({
      where: { id: token.user },
      select: {
        id: true,
        email: true,
        firstName: true,
        lastName: true,
        role: true,
        createdAt: true,
        updatedAt: true,
      },
    });

    if (!userData) {
      return NextResponse.json(
        { error: "User not found" },
        { status: 404 }
      );
    }

    return NextResponse.json(userData);
  } catch (error) {
    console.error("Error fetching user data:", error);
    return NextResponse.json(
      { error: "Failed to fetch user data" },
      { status: 500 }
    );
  }
} 