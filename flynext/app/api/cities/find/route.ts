import { NextResponse } from "next/server";
import prisma from "@/utils/prisma";
import { authenticate } from "@/utils/auth";
// generated by cursor
export async function POST(request: Request) {
  try {
    // Authenticate the request
    const payload = await authenticate(request);
    if (!payload || !payload.user) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
    }

    const { name, country } = await request.json();

    if (!name || !country) {
      return NextResponse.json(
        { error: "Name and country are required" },
        { status: 400 }
      );
    }

    // Find the city using the unique constraint
    const city = await prisma.city.findUnique({
      where: {
        name_country: {
          name,
          country,
        },
      },
      select: { id: true },
    });

    if (!city) {
      return NextResponse.json(
        { error: "City not found" },
        { status: 404 }
      );
    }

    return NextResponse.json({ id: city.id });
  } catch (error) {
    console.error("Error finding city:", error);
    return NextResponse.json(
      { error: "Failed to find city" },
      { status: 500 }
    );
  }
} 